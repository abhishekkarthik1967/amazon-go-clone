AWSTemplateFormatVersion: '2010-09-09'
Description: This template is to create s3 bucket trigger
Parameters:
  LambdaArtifactBucketName:
    Type: String
    Default: test-artifact
  S3BucketName:
    Type: String
    Default: test-csci5709
Resources:
  ExampleS3:
    Type: AWS::S3::Bucket
    DependsOn: ExampleInvokePermission
    Properties:
      BucketName: !Ref S3BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt [ ExampleLambdaFunction, Arn]
  ExampleInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn: ExampleLambdaFunction
    Properties:
      FunctionName:
        Fn::GetAtt:
          - ExampleLambdaFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${S3BucketName}
  ExampleLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: LambdaArtifactBucketName
      FunctionName: example-lambda-function
      Handler: index.handler
      Role: arn:aws:iam::824769648230:role/LabRole
      Code:
        ZipFile: !Sub |
                const AWS = require('aws-sdk');
                const docClient = new AWS.DynamoDB.DocumentClient();
                const params = {
                        TableName : 'products',
                }
                async function getProduct(){
                try {
                    let result = await docClient.scan(params).promise();
                    return result;
                } catch (err) {
                return err;
                }
                }
                exports.handler = async (event) => {
                    try {
                        const data = await getProduct()
                    const response = {
                    statusCode: 200,
                    body: data,
                        };
                return response;
                } catch (err) {
                    return { error: err }
                }};
      Runtime: nodejs14.x

Outputs:
  S3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [ExampleS3, DomainName]]]
    Description: Name of S3 bucket